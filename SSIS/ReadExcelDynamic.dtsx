<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/31/2016 12:21:56 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="PAI-201"
  DTS:CreatorName="pai\apatel"
  DTS:DTSID="{2BB6D449-11DC-4F42-A350-A00156750810}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.1400.361"
  DTS:LocaleID="1033"
  DTS:ObjectName="ReadExcelDynamic"
  DTS:PackageType="5"
  DTS:VersionBuild="101"
  DTS:VersionGUID="{6BF62D53-995B-44F6-9437-99C8EE42F4D0}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{099CF859-C2B1-4505-AE86-E6FF3B3CF048}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\apatel\Source\BOB-Report04303768-20150503.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 1]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{FFB8D51F-8464-4462-ACD4-38E60A07AC52}"
      DTS:ObjectName="Excel Connection Manager 1">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::ProcessingFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\ExcelDrop\Processing\*-Report-*-*-YYYYMMDD.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PAI-201.HoneDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{69A6203D-932C-4DCC-B072-06DE5931F55A}"
      DTS:ObjectName="PAI-201.HoneDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=PAI-201;Initial Catalog=HoneDB;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[WMI Connection Manager]"
      DTS:CreationName="WMI"
      DTS:DTSID="{67CD68FD-04A5-4E3C-81C7-81CFF6EC8AA6}"
      DTS:ObjectName="WMI Connection Manager">
      <DTS:ObjectData>
        <WmiConnectionManager
          ConnectionString="ServerName=\\localhost;Namespace=\root\cimv2;UseNtAuth=True;UserName=;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{02DD70AB-4F6F-4B23-82F5-15D48167DF0A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ArchivePath] +  @[User::FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveFile">
      <DTS:VariableValue
        DTS:DataType="8">C:\ExcelDrop\Archive\*-Report-*-*-YYYYMMDD.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A8A9F48B-1C8B-45D2-9DEC-7FB8042FE6DF}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::Drive] +  @[User::Path] + &quot;Archive\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchivePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\ExcelDrop\Archive\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1B01825E-01A4-4725-AB77-154EC977C0D9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Drive">
      <DTS:VariableValue
        DTS:DataType="8">C:</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{23E834AA-2E32-4129-ABB1-CD4640BDFA61}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::DropPath] +  @[User::FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DropFile">
      <DTS:VariableValue
        DTS:DataType="8">C:\ExcelDrop\*-Report-*-*-YYYYMMDD.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{504F1CD5-2F21-479B-92B9-83867ABBECDC}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::Drive] +  @[User::Path]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DropPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\ExcelDrop\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{018F25B6-ACBF-4F3A-B21A-60075F9C9FD4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileArchiveFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\ExcelDrop\Archive\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{72FFC844-6CA5-4C53-BB55-B981A85567D7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileExtension">
      <DTS:VariableValue
        DTS:DataType="8">xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FB403864-EDD8-4DF6-9254-ED59D1792B73}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FileNamePrefix] + &quot;*.&quot; + @[User::FileExtension]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileMask">
      <DTS:VariableValue
        DTS:DataType="8">*-Report-*-*-*.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E520BF76-A50D-4DAD-9B51-F566F4E2DE6E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8">*-Report-*-*-YYYYMMDD.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{24D76D7F-4F14-4D7E-8BA6-C44CBE322FD5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileNamePrefix">
      <DTS:VariableValue
        DTS:DataType="8">*-Report-*-*-</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3E25DFE5-C79C-46FF-96C4-D7D796CE6449}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="IsFileExists">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{949FB3B3-2A2A-4082-AED9-D6D701E99936}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Path">
      <DTS:VariableValue
        DTS:DataType="8">\ExcelDrop\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E243E26F-F248-4E20-9CEF-04BF3F2E51EE}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ProcessingPath] +  @[User::FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessingFile">
      <DTS:VariableValue
        DTS:DataType="8">C:\ExcelDrop\Processing\*-Report-*-*-YYYYMMDD.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7F682662-7884-4581-A564-C53CEF659B0D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::Drive] +  @[User::Path] + &quot;Processing\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessingPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\ExcelDrop\Processing\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Look Container for New Data"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For Loop Container"
      DTS:DTSID="{619b4994-461d-44df-b16b-95fee719e62c}"
      DTS:EvalExpression="@[User::IsFileExists] == False"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:InitExpression="@[User::IsFileExists] = False"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="Look Container for New Data">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Look Container for New Data\Create Archive file directory"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="File System Task"
          DTS:DTSID="{E913634C-ED04-4BB9-AE3E-FE8FAB84F4A9}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Archive file directory"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="CreateDirectory"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::FileArchiveFolderPath"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Look Container for New Data\Move Data File To Processing Directory"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="File System Task"
          DTS:DTSID="{eb9b9e32-a9eb-4b7f-946b-e1d48c786526}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Move Data File To Processing Directory"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2016 RC3; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::DropFile"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::ProcessingPath"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Look Container for New Data\Move Processed File To Archive Directory"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="File System Task"
          DTS:DTSID="{1d9e6e67-fd5c-406f-ae5b-f59837a4e74f}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Move Processed File To Archive Directory"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2016 RC3; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::ProcessingFile"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::FileArchiveFolderPath"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Look Container for New Data\Script Task"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{9173f94f-a395-4d0d-b005-8a96fee86b82}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_c9e306a270ed43a58fc93e03c56c9a02"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::ArchivePath,User::ProcessingPath"
              ReadWriteVariables="User::FileArchiveFolderPath">
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.OleDb;
using System.Data.SqlClient;
using System.Collections.Generic;

#endregion

namespace ST_2c9755396e764dcb8080e2be57ff6fa4
{

    public class ExcelSqlDatatype
    {
        public string ExcelColumnName { get; set; }
        public string SqlDataType { get; set; }
    }
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here


            String FolderPath = Dts.Variables["User::ProcessingPath"].Value.ToString();
           
            var directory = new DirectoryInfo(FolderPath);
            FileInfo[] files = directory.GetFiles();

            //Declare and initilize variables
            string fileFullPath = "";

            //Get one Book(Excel file at a time)
            foreach (FileInfo file in files)
            {
               


                String SchemaName = "";
                fileFullPath = FolderPath + "\\" + file.Name;
                string[] fileSplit = file.Name.Split('-');
                String DbName = "";
                String createStaggingTable = "";
                String TableName = "";
                String TableMappingName = "";
                int foundFile = 0;

                if(file.Name.Contains("BOB-Report"))
                { 
                    SchemaName = "dbo";
                    TableName = "BOBReport";
                    TableMappingName = "BOBReport-Copy";
                    DbName = fileSplit[3];
                    foundFile = 1;
                    Dts.Variables["FileArchiveFolderPath"].Value = Dts.Variables["User::ArchivePath"].Value.ToString() + fileSplit[3] + "\\" + fileSplit[2] + "\\BOB-Report\\";
                    

                    createStaggingTable = "IF OBJECT_ID('" + SchemaName + "." + TableName + "',  'U') IS NOT NULL BEGIN DROP TABLE [" + SchemaName + "].[" + TableName + "] END;IF OBJECT_ID('" + SchemaName + "." + TableName + "',  'U') IS NULL BEGIN CREATE TABLE [" + SchemaName + "].[" + TableName + "](";

                    createStaggingTable += " [LookUpCode] [varchar](50) NULL,[AccountName] [varchar](50) NULL,[PolicyAndLineTypes] [varchar](50) NULL,[EffectiveDate] [datetime] NULL,[ExpirationDate] [datetime] NULL,[LineStatusCode] [varchar](4) NULL,[ProcedureCode] [varchar](20) NULL,[IssuingCompanyCode] [varchar](20) NULL,[PremiumPayableCode] [varchar](20) NULL,[PremiumBilled] [decimal](18, 5) NULL, [CommissionBilled] [decimal](18, 5) NULL, [PremiumAnnualized]        [decimal](18, 5) NULL, [CommissionAnnualized] [decimal](18, 5) NULL, [TypeCode] [varchar](1) NULL, [Address1] [varchar](100) NULL, [Address2]  [varchar](100) NULL, [City] [varchar](100) NULL, [StateCode] [varchar](50) NULL, [PostalCode] [varchar](5) NULL, [SICCode] [int] NULL, [PolicyAgencyDefinedCategory] [varchar](100) NULL, [ActiveInactiveStatus] [varchar](100) NULL, [AccountTypeCode] [varchar](5) NULL";


                    createStaggingTable += ") END";
                }

                if(file.Name.Contains("Client-Report"))
                {
                    SchemaName = "dbo";
                    TableName = "ClientReport";
                    TableMappingName = "ClientReport-Copy";
                    DbName = fileSplit[3];
                    foundFile = 1;
                    Dts.Variables["FileArchiveFolderPath"].Value = Dts.Variables["User::ArchivePath"].Value.ToString() + fileSplit[3] + "\\" + fileSplit[2] + "\\Client-Report\\";

                    createStaggingTable = "IF OBJECT_ID('" + SchemaName + "." + TableName + "',  'U') IS NOT NULL BEGIN DROP TABLE [" + SchemaName + "].[" + TableName + "] END;IF OBJECT_ID('" + SchemaName + "." + TableName + "',  'U') IS NULL BEGIN CREATE TABLE [" + SchemaName + "].[" + TableName + "](";

                    createStaggingTable += "[ID] [varchar](50) NULL, [AccountName] [varchar](50) NULL, [CompanyPolicy] [varchar](50) NULL,	[EffectiveDate] [datetime]  NULL,[ProcedureCode] [varchar](20) NULL,[IssuingCompanyCode] [varchar](20) NULL,[PremiumPayableCode] [varchar](20) NULL,[PremiumBilled] [decimal](18, 0) NULL,[CommissionBilled]  [decimal](18, 0) NULL,[PremiumAnnualized] [decimal](18, 0) NULL,[CommissionAnnualized] [decimal](18, 0) NULL,[TypeCode]  [varchar](1) NULL,[Address1] [varchar](100) NULL,	[Address2] [varchar](100) NULL,[PostalCode] [varchar](5) NULL,	[SICCode]   [int] NULL,	[ActiveInactiveStatus] [varchar](100) NULL";


                    createStaggingTable += ") END";
                }

                if (file.Name.Contains("Activities-Report"))
                {

                    SchemaName = "dbo";
                    TableName = "ActivitiesReport";
                    TableMappingName = "ActivitiesReport-Copy";
                    DbName = fileSplit[3];
                    foundFile = 1;
                    Dts.Variables["FileArchiveFolderPath"].Value = Dts.Variables["User::ArchivePath"].Value.ToString() + fileSplit[3] + "\\" + fileSplit[2] + "\\Activities-Report\\";

                    createStaggingTable = "IF OBJECT_ID('" + SchemaName + "." + TableName + "',  'U') IS NOT NULL BEGIN DROP TABLE [" + SchemaName + "].[" + TableName + "] END;IF OBJECT_ID('" + SchemaName + "." + TableName + "',  'U') IS NULL BEGIN CREATE TABLE [" + SchemaName + "].[" + TableName + "](";

                    createStaggingTable += "[ID] [varchar](50) NULL,[AccountName] [varchar](50) NULL,[CompanyPolicy] [varchar](50) NULL,[EffectiveDate] [datetime] NULL,[LookUpCode] [varchar](100) NULL,[IssuingCompanyCode] [varchar](20) NULL,[PremiumPayableCode] [varchar](20) NULL,[ProcedureCode] [varchar](50) NULL,	[CommissionBilled] [decimal](18, 0) NULL,[CommissionAnnualized] [decimal](18, 0) NULL,[TypeCode] [varchar](1) NULL,[PostalCode] [varchar](5) NULL,[SICCode] [int] NULL,[ActiveInactiveStatus] [varchar](100) NULL";
                    createStaggingTable += ") END";

                }


                if (foundFile == 1)
                {
                    string ColumnStartName = "";
                    string ColumnEndName = "";
                    string RowStartNumber = "";
                    string ExcelSheetName = "";

                    using (SqlConnection con = new SqlConnection("Server=localhost;Database=" + DbName + ";Integrated Security=True"))
                    {
                        con.Open();

                        using (SqlCommand command = new SqlCommand("SELECT TypeName,Value FROM [" + SchemaName + "].[" + TableName + "ExcelDetails]", con))
                        {
                            using (SqlDataReader reader = command.ExecuteReader())
                            {
                                if (reader != null)
                                {
                                    while (reader.Read())
                                    {
                                        switch(reader["TypeName"].ToString().Trim())
                                        {
                                            case "ExcelSheetName": ExcelSheetName = reader["Value"].ToString().Trim();
                                                break;
                                            case "ColumnBeginingLetter": ColumnStartName = reader["Value"].ToString().Trim();
                                                break;
                                            case "ColumnEndingLetter": ColumnEndName = reader["Value"].ToString().Trim();
                                                break;
                                            case "RowBeginingNumber": RowStartNumber = reader["Value"].ToString().Trim();
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    }



                    //Create Excel Connection
                    string ConStr;
                    string HDR;
                    HDR = "YES";
                    ConStr = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + fileFullPath + ";Extended Properties=\"Excel 12.0;HDR=" + HDR + ";IMEX=0\"";
                    OleDbConnection cnn = new OleDbConnection(ConStr);


                    //Get Sheet Name
                    cnn.Open();
                    DataTable dtSheet = cnn.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null);
                    string sheetname;
                    sheetname = "";
                    foreach (DataRow drSheet in dtSheet.Rows)
                    {
                        if (drSheet["TABLE_NAME"].ToString().Contains("$"))
                        {
                            sheetname = drSheet["TABLE_NAME"].ToString();
                        }
                    }

                    string testtest = "," + sheetname + ",";
                    //Load the DataTable with Sheet Data so we can get the column header
                    OleDbCommand oconn = new OleDbCommand("select top 1 * from [" + ExcelSheetName + ColumnStartName + RowStartNumber +":" + ColumnEndName+"]", cnn);
                    OleDbDataAdapter adp = new OleDbDataAdapter(oconn);
                    DataTable dt = new DataTable();
                    adp.Fill(dt);
                    cnn.Close();


                    //Prepare Header columns list so we can run against Database to get matching columns for a table.
                    List<string> ExcelHeaderColumn = new List<string>();
                    for (int i = 0; i < dt.Columns.Count; i++)
                    {
                        ExcelHeaderColumn.Add(dt.Columns[i].ColumnName);
                    }


                    ////Get Matching Column List from SQL Server
                    List<string> SQLColumnList = new List<string>();
                    List<string> ExcelColumnList = new List<string>();




                    Dictionary<string, ExcelSqlDatatype> ExcelSqlDataTypeList = new Dictionary<string, ExcelSqlDatatype>();
                    DataTable dt1 = new DataTable();

                    using (SqlConnection con = new SqlConnection("Server=localhost;Database=" + DbName + ";Integrated Security=True"))
                    {
                        con.Open();






                        using (SqlCommand cmd = new SqlCommand(createStaggingTable))
                        {
                            cmd.Connection = con;
                            cmd.ExecuteNonQuery();
                        }


                        using (SqlCommand command = new SqlCommand("SELECT ColumnNameTable,ColumnNameExcel,Datatype FROM [" + SchemaName + "].[" + TableName + "Mapping]", con))
                        {
                            using (SqlDataReader reader = command.ExecuteReader())
                            {
                                if (reader != null)
                                {
                                    while (reader.Read())
                                    {
                                        SQLColumnList.Add(reader["ColumnNameTable"].ToString().Trim());
                                        ExcelColumnList.Add(reader["ColumnNameExcel"].ToString().Trim());
                                        ExcelSqlDataTypeList.Add(reader["ColumnNameTable"].ToString().Trim(), new ExcelSqlDatatype()
                                        {
                                            ExcelColumnName = reader["ColumnNameExcel"].ToString().Trim(),
                                            SqlDataType = reader["Datatype"].ToString().Trim()
                                        });
                                    }
                                }
                            } // reader closed and disposed up here

                        } // command disposed here



                        string createTableString = "IF OBJECT_ID('" + SchemaName + "." + TableMappingName + "',  'U') IS NOT NULL BEGIN DROP TABLE [" + SchemaName + "].[" + TableMappingName + "] END;IF OBJECT_ID('" + SchemaName + "." + TableMappingName + "',  'U') IS NULL BEGIN CREATE TABLE [" + SchemaName + "].[" + TableMappingName + "](";
                        string ExcelColumnListExtractionstring = "";
                        for (int i = 0; i < SQLColumnList.Count; i++)
                        {
                            if (i != SQLColumnList.Count - 1)
                            {
                                ExcelColumnListExtractionstring += "[" + ExcelColumnList[i].ToString() + "]" + ",";

                                createTableString += "[" + ExcelColumnList[i].ToString() + "][varchar](max) Null,";
                            }
                            else
                            {
                                ExcelColumnListExtractionstring += "[" + ExcelColumnList[i].ToString() + "]";
                                createTableString += "[" + ExcelColumnList[i].ToString() + "][varchar](max) Null";
                            }
                        }
                        createTableString += ") END";

                        using (SqlCommand cmd = new SqlCommand(createTableString))
                        {
                            cmd.Connection = con;
                            cmd.ExecuteNonQuery();
                        }




                        //Use Actual Matching Columns to get data from Excel Sheet
                        OleDbConnection cnn1 = new OleDbConnection(ConStr);
                        cnn1.Open();
                        OleDbCommand oconn1 = new OleDbCommand("select " + ExcelColumnListExtractionstring + " from [" + ExcelSheetName + ColumnStartName + RowStartNumber + ":" + ColumnEndName + "]", cnn1);
                        OleDbDataAdapter adp1 = new OleDbDataAdapter(oconn1);

                        adp1.Fill(dt1);
                        cnn1.Close();

                        //string test = SQLColumnList[ExcelColumnList.IndexOf(column.ToString())];

                        //Load Data from DataTable to SQL Server Table.
                        using (SqlBulkCopy BC = new SqlBulkCopy(con))
                        {
                            BC.DestinationTableName = "[" + SchemaName + "].[" + TableMappingName + "]";
                            foreach (var column in dt1.Columns)
                            {
                                string test = SQLColumnList[ExcelColumnList.IndexOf(column.ToString())];
                                BC.ColumnMappings.Add(column.ToString(), column.ToString());
                            }
                            BC.WriteToServer(dt1);
                        }




                        string mapColumnsStaggingTable = "INSERT INTO [" + SchemaName + "].[" + TableName + "](";
                        int j = 0;
                        foreach (var item in ExcelSqlDataTypeList)
                        {
                            if (j != ExcelSqlDataTypeList.Count - 1)
                            {
                                mapColumnsStaggingTable += item.Key + ",";
                            }
                            else
                            {
                                mapColumnsStaggingTable += item.Key;
                            }
                            j++;
                        }
                        j = 0;
                        mapColumnsStaggingTable += ") SELECT ";
                        foreach (var item in ExcelSqlDataTypeList)
                        {
                            if (j != ExcelSqlDataTypeList.Count - 1)
                            {
                                if (item.Value.SqlDataType == "decimal")
                                {
                                    mapColumnsStaggingTable += "Convert(" + item.Value.SqlDataType + ", COALESCE(NULLIF(" + item.Value.ExcelColumnName + ", ''), NULL)) as " + item.Key + ",";
                                }
                                else {
                                    mapColumnsStaggingTable += "Convert(" + item.Value.SqlDataType + "," + item.Value.ExcelColumnName + ") as " + item.Key + ",";
                                }
                            }
                            else
                            {
                                if (item.Value.SqlDataType == "decimal")
                                {
                                    mapColumnsStaggingTable += "Convert(" + item.Value.SqlDataType + ", COALESCE(NULLIF(" + item.Value.ExcelColumnName + ", ''), NULL)) as " + item.Key;
                                }
                                else {
                                    mapColumnsStaggingTable += "Convert(" + item.Value.SqlDataType + "," + item.Value.ExcelColumnName + ") as " + item.Key;
                                }
                            }
                            j++;
                        }
                        mapColumnsStaggingTable += " FROM [" + SchemaName + "].[" + TableMappingName + "] ";



                        using (SqlCommand command = new SqlCommand(mapColumnsStaggingTable, con))
                        {
                            command.ExecuteNonQuery();
                        }

                        con.Close();

                    } //connection closed and disposed here




                }











            }

            Dts.TaskResult = (int)ScriptResults.Success;

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2c9755396e764dcb8080e2be57ff6fa4.Properties.Settings.get_Default():ST_2c9755396e764dcb8080e2be57ff6fa4.Properties.Sett" +
    "ings")]

namespace ST_2c9755396e764dcb8080e2be57ff6fa4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_c9e306a270ed43a58fc93e03c56c9a02.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{193ff80f-82e3-4108-9cdb-e1bf9ab99202}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_2c9755396e764dcb8080e2be57ff6fa4</RootNamespace><AssemblyName>ST_c9e306a270ed43a58fc93e03c56c9a02</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_2c9755396e764dcb8080e2be57ff6fa4</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_2c9755396e764dcb8080e2be57ff6fa4</msb:DisplayName>
		<msb:ProjectId>{F073BD18-9887-492C-A71F-F9A66C640747}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_c9e306a270ed43a58fc93e03c56c9a02.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_2c9755396e764dcb8080e2be57ff6fa4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_2c9755396e764dcb8080e2be57ff6fa4")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2c9755396e764dcb8080e2be57ff6fa4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2c9755396e764dcb8080e2be57ff6fa4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2c9755396e764dcb8080e2be57ff6fa4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_2c9755396e764dcb8080e2be57ff6fa4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_2c9755396e764dcb8080e2be57ff6fa4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_c9e306a270ed43a58fc93e03c56c9a02.dll">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
NwKiAAIAaSAAAAAAhghHAhAAAgByIAAAAACGGFIHBgADAHwgAAAAAIYAzwUGAAMAFDAAAAAAhhhS
BwYAAwByIAAAAACDGFIHBgADABwwAAAAAJMIBQfvAQMASDAAAAAAkwhwAvUBAwBPMAAAAACTCHwC
+wEDAFcwAAAAAJYIwQgCAgQAXjAAAAAAhhhSBwYABABmMAAAAACRGFgHBwIEAAAAAQC3BAAAAQC3
BAAAAQC3BAkAUgcBABEAUgcGABkAUgcKACkAUgcQADEAUgcQADkAUgcQAEEAUgcQAEkAUgcQAFEA
UgcQAFkAUgcQAGEAUgcQAHEAUgcGAHkAUgcGAAEBUgcGACEBUgcVAGkAUgcGAIEAjgiLADEBKwiR
ADkBngWXAEEBowSeAGkA+ASiAEkBUgcQAEkBOQimAFEBvgGiAFkBrQisAFkBuwizAFkBXgi6AFkB
rQi/AEEBrQTFAFkBrQjKALEAUgcQAGkBxAUGALkAUgfQALkA9wbXAHEBngXcAFkBrgWiAFkBSgnh
AHEB6ADnANkA7QIGAJEAUgcQAHkBJAjrAJEAZwHwAJkApAj6AJEBRAcAAckA8gieANEAngXcAMkA
CAnnAJkBUgcFAaEBUgcMAZkAUgcGAKkBmQUTAWkB5wIGAAwAUgcGAJkAZwgfAbEBngUlAbkB4AGi
AAwA7QAsAZEB/ggyARQAUgcGALkAUgcQALkAZQY+AcEBOgkyARQA7QBEAQwA/ggyAQwAngVMAVkB
rQhSAeEAUgc+AeEAxwEQAAwAvQRaAeEAQghgAckB7QBmAeEAKgduARQARAd0ARwA8giHARQA/ggy
ASQAGQmaARwACAnnACQAowSfATEBzQgBAIEAUgcGANkBrAGkAdkBIQmtAQkBUgezASkBUgcGAAgA
HADNAQgAIADSASAAYwDSASEAYwDSAS4ACwAgAi4AEwApAi4AGwBIAi4AIwBRAi4AKwB6Ai4AMwB6
Ai4AOwB6Ai4AQwBRAi4ASwCAAi4AUwB6Ai4AWwCXAkAAYwDSAUEAYwDSAWAAYwDSAWMAawDSAWkA
ewBIAoAAYwDSAYMAcwDSAYkAewBIAqEAYwDSARwAAgABAAQAAwAFAAUAAAAHAgsCAABLAgsCAAAJ
Bw8CAACQAhUCAADFCBsCAgABAAMAAQACAAMAAgADAAUAAQAEAAUAAgAJAAcAAgAKAAkAAQALAAkA
AgAMAAsAGQE2AX8BkgEEgAAAAQAAABoYAWQAAAAAAAAIAAAABAAAAAAAAAAAAAAAuwHEAAAAAAAL
AAAAAAAAAAAAAADEAQEFAAAAAAQAAAAAAAAAAAAAALsBpgAAAAAABAAAAAAAAAAAAAAAuwGnBQAA
AAALAAAAAAAAAAAAAADEAX8AAAAAAAAAAAABAAAAowcAAAYAAwAAAAAAAExpc3RgMQBTVF9jOWUz
MDZhMjcwZWQ0M2E1OGZjOTNlMDNjNTZjOWEwMgBLZXlWYWx1ZVBhaXJgMgBEaWN0aW9uYXJ5YDIA
U1RfMmM5NzU1Mzk2ZTc2NGRjYjgwODBlMmJlNTdmZjZmYTQAPE1vZHVsZT4AU3lzdGVtLklPAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFN5c3RlbS5EYXRhAFN5c3RlbS5E
YXRhLk9sZURiAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAFJlYWQAQWRkAE9s
ZURiU2NoZW1hR3VpZAA8RXhjZWxDb2x1bW5OYW1lPmtfX0JhY2tpbmdGaWVsZAA8U3FsRGF0YVR5
cGU+a19fQmFja2luZ0ZpZWxkAE9sZURiQ29tbWFuZABTcWxDb21tYW5kAGRlZmF1bHRJbnN0YW5j
ZQBHZXRPbGVEYlNjaGVtYVRhYmxlAERhdGFUYWJsZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50
aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfTmFtZQBzZXRfRGVzdGluYXRpb25U
YWJsZU5hbWUAZ2V0X0NvbHVtbk5hbWUAZ2V0X0V4Y2VsQ29sdW1uTmFtZQBzZXRfRXhjZWxDb2x1
bW5OYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAZ2V0X1NxbERhdGFUeXBlAHNl
dF9TcWxEYXRhVHlwZQBFeGNlbFNxbERhdGF0eXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBJbnRlcm5h
bERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3Nl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
U1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVl
AEluZGV4T2YAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTcWxCdWxrQ29weUNvbHVtbk1hcHBp
bmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAFNUX2M5ZTMwNmEyNzBlZDQzYTU4ZmM5M2UwM2M1NmM5YTAyLmRsbABGaWxsAGdl
dF9JdGVtAFN5c3RlbQBUcmltAEVudW0AcmVzb3VyY2VNYW4AT3BlbgBTY3JpcHRNYWluAERhdGFD
b2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24AU3FsQnVsa0NvcHlDb2x1bW5NYXBwaW5nQ29sbGVjdGlvbgBEYXRhQ29sdW1uQ29s
bGVjdGlvbgBEYXRhUm93Q29sbGVjdGlvbgBzZXRfQ29ubmVjdGlvbgBPbGVEYkNvbm5lY3Rpb24A
U3FsQ29ubmVjdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24ARmlsZUluZm8AQ3VsdHVyZUluZm8ARmls
ZVN5c3RlbUluZm8ARGlyZWN0b3J5SW5mbwBDaGFyAERiRGF0YVJlYWRlcgBTcWxEYXRhUmVhZGVy
AEV4ZWN1dGVSZWFkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBPbGVEYkRhdGFBZGFwdGVyAFdyaXRl
VG9TZXJ2ZXIASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRp
YWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNl
cwBTVF8yYzk3NTUzOTZlNzY0ZGNiODA4MGUyYmU1N2ZmNmZhNC5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfMmM5NzU1Mzk2ZTc2NGRjYjgwODBlMmJlNTdm
ZjZmYTQuUHJvcGVydGllcwBUYWJsZXMAZ2V0X1ZhcmlhYmxlcwBHZXRGaWxlcwBnZXRfQ29sdW1u
TWFwcGluZ3MAU2V0dGluZ3MAQ29udGFpbnMAZ2V0X0NvbHVtbnMAU3lzdGVtLkNvbGxlY3Rpb25z
AFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9Sb3dzAENvbmNhdABPYmplY3QAU3Bs
aXQAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AGdldF9D
dXJyZW50AGdldF9Db3VudABNb3ZlTmV4dABEYXRhUm93AGdldF9LZXkAZ2V0X0Fzc2VtYmx5AFNx
bEJ1bGtDb3B5AEV4ZWN1dGVOb25RdWVyeQBvcF9FcXVhbGl0eQAAAAApVQBzAGUAcgA6ADoAUABy
AG8AYwBlAHMAcwBpAG4AZwBQAGEAdABoAAABAANcAAAVQgBPAEIALQBSAGUAcABvAHIAdAABB2QA
YgBvAAATQgBPAEIAUgBlAHAAbwByAHQAAB1CAE8AQgBSAGUAcABvAHIAdAAtAEMAbwBwAHkAAStG
AGkAbABlAEEAcgBjAGgAaQB2AGUARgBvAGwAZABlAHIAUABhAHQAaAAAI1UAcwBlAHIAOgA6AEEA
cgBjAGgAaQB2AGUAUABhAHQAaAAAGVwAQgBPAEIALQBSAGUAcABvAHIAdABcAAEdSQBGACAATwBC
AEoARQBDAFQAXwBJAEQAKAAnAAEDLgAATycALAAgACAAJwBVACcAKQAgAEkAUwAgAE4ATwBUACAA
TgBVAEwATAAgAEIARQBHAEkATgAgAEQAUgBPAFAAIABUAEEAQgBMAEUAIABbAAEHXQAuAFsAACld
ACAARQBOAEQAOwBJAEYAIABPAEIASgBFAEMAVABfAEkARAAoACcAAUsnACwAIAAgACcAVQAnACkA
IABJAFMAIABOAFUATABMACAAQgBFAEcASQBOACAAQwBSAEUAQQBUAEUAIABUAEEAQgBMAEUAIABb
AAEFXQAoAACGiyAAWwBMAG8AbwBrAFUAcABDAG8AZABlAF0AIABbAHYAYQByAGMAaABhAHIAXQAo
ADUAMAApACAATgBVAEwATAAsAFsAQQBjAGMAbwB1AG4AdABOAGEAbQBlAF0AIABbAHYAYQByAGMA
aABhAHIAXQAoADUAMAApACAATgBVAEwATAAsAFsAUABvAGwAaQBjAHkAQQBuAGQATABpAG4AZQBU
AHkAcABlAHMAXQAgAFsAdgBhAHIAYwBoAGEAcgBdACgANQAwACkAIABOAFUATABMACwAWwBFAGYA
ZgBlAGMAdABpAHYAZQBEAGEAdABlAF0AIABbAGQAYQB0AGUAdABpAG0AZQBdACAATgBVAEwATAAs
AFsARQB4AHAAaQByAGEAdABpAG8AbgBEAGEAdABlAF0AIABbAGQAYQB0AGUAdABpAG0AZQBdACAA
TgBVAEwATAAsAFsATABpAG4AZQBTAHQAYQB0AHUAcwBDAG8AZABlAF0AIABbAHYAYQByAGMAaABh
AHIAXQAoADQAKQAgAE4AVQBMAEwALABbAFAAcgBvAGMAZQBkAHUAcgBlAEMAbwBkAGUAXQAgAFsA
dgBhAHIAYwBoAGEAcgBdACgAMgAwACkAIABOAFUATABMACwAWwBJAHMAcwB1AGkAbgBnAEMAbwBt
AHAAYQBuAHkAQwBvAGQAZQBdACAAWwB2AGEAcgBjAGgAYQByAF0AKAAyADAAKQAgAE4AVQBMAEwA
LABbAFAAcgBlAG0AaQB1AG0AUABhAHkAYQBiAGwAZQBDAG8AZABlAF0AIABbAHYAYQByAGMAaABh
AHIAXQAoADIAMAApACAATgBVAEwATAAsAFsAUAByAGUAbQBpAHUAbQBCAGkAbABsAGUAZABdACAA
WwBkAGUAYwBpAG0AYQBsAF0AKAAxADgALAAgADUAKQAgAE4AVQBMAEwALAAgAFsAQwBvAG0AbQBp
AHMAcwBpAG8AbgBCAGkAbABsAGUAZABdACAAWwBkAGUAYwBpAG0AYQBsAF0AKAAxADgALAAgADUA
KQAgAE4AVQBMAEwALAAgAFsAUAByAGUAbQBpAHUAbQBBAG4AbgB1AGEAbABpAHoAZQBkAF0AIAAg
ACAAIAAgACAAIAAgAFsAZABlAGMAaQBtAGEAbABdACgAMQA4ACwAIAA1ACkAIABOAFUATABMACwA
IABbAEMAbwBtAG0AaQBzAHMAaQBvAG4AQQBuAG4AdQBhAGwAaQB6AGUAZABdACAAWwBkAGUAYwBp
AG0AYQBsAF0AKAAxADgALAAgADUAKQAgAE4AVQBMAEwALAAgAFsAVAB5AHAAZQBDAG8AZABlAF0A
IABbAHYAYQByAGMAaABhAHIAXQAoADEAKQAgAE4AVQBMAEwALAAgAFsAQQBkAGQAcgBlAHMAcwAx
AF0AIABbAHYAYQByAGMAaABhAHIAXQAoADEAMAAwACkAIABOAFUATABMACwAIABbAEEAZABkAHIA
ZQBzAHMAMgBdACAAIABbAHYAYQByAGMAaABhAHIAXQAoADEAMAAwACkAIABOAFUATABMACwAIABb
AEMAaQB0AHkAXQAgAFsAdgBhAHIAYwBoAGEAcgBdACgAMQAwADAAKQAgAE4AVQBMAEwALAAgAFsA
UwB0AGEAdABlAEMAbwBkAGUAXQAgAFsAdgBhAHIAYwBoAGEAcgBdACgANQAwACkAIABOAFUATABM
ACwAIABbAFAAbwBzAHQAYQBsAEMAbwBkAGUAXQAgAFsAdgBhAHIAYwBoAGEAcgBdACgANQApACAA
TgBVAEwATAAsACAAWwBTAEkAQwBDAG8AZABlAF0AIABbAGkAbgB0AF0AIABOAFUATABMACwAIABb
AFAAbwBsAGkAYwB5AEEAZwBlAG4AYwB5AEQAZQBmAGkAbgBlAGQAQwBhAHQAZQBnAG8AcgB5AF0A
IABbAHYAYQByAGMAaABhAHIAXQAoADEAMAAwACkAIABOAFUATABMACwAIABbAEEAYwB0AGkAdgBl
AEkAbgBhAGMAdABpAHYAZQBTAHQAYQB0AHUAcwBdACAAWwB2AGEAcgBjAGgAYQByAF0AKAAxADAA
MAApACAATgBVAEwATAAsACAAWwBBAGMAYwBvAHUAbgB0AFQAeQBwAGUAQwBvAGQAZQBdACAAWwB2
AGEAcgBjAGgAYQByAF0AKAA1ACkAIABOAFUATABMAAALKQAgAEUATgBEAAAbQwBsAGkAZQBuAHQA
LQBSAGUAcABvAHIAdAABGUMAbABpAGUAbgB0AFIAZQBwAG8AcgB0AAAjQwBsAGkAZQBuAHQAUgBl
AHAAbwByAHQALQBDAG8AcAB5AAEfXABDAGwAaQBlAG4AdAAtAFIAZQBwAG8AcgB0AFwAAYSzWwBJ
AEQAXQAgAFsAdgBhAHIAYwBoAGEAcgBdACgANQAwACkAIABOAFUATABMACwAIABbAEEAYwBjAG8A
dQBuAHQATgBhAG0AZQBdACAAWwB2AGEAcgBjAGgAYQByAF0AKAA1ADAAKQAgAE4AVQBMAEwALAAg
AFsAQwBvAG0AcABhAG4AeQBQAG8AbABpAGMAeQBdACAAWwB2AGEAcgBjAGgAYQByAF0AKAA1ADAA
KQAgAE4AVQBMAEwALAAJAFsARQBmAGYAZQBjAHQAaQB2AGUARABhAHQAZQBdACAAWwBkAGEAdABl
AHQAaQBtAGUAXQAgACAATgBVAEwATAAsAFsAUAByAG8AYwBlAGQAdQByAGUAQwBvAGQAZQBdACAA
WwB2AGEAcgBjAGgAYQByAF0AKAAyADAAKQAgAE4AVQBMAEwALABbAEkAcwBzAHUAaQBuAGcAQwBv
AG0AcABhAG4AeQBDAG8AZABlAF0AIABbAHYAYQByAGMAaABhAHIAXQAoADIAMAApACAATgBVAEwA
TAAsAFsAUAByAGUAbQBpAHUAbQBQAGEAeQBhAGIAbABlAEMAbwBkAGUAXQAgAFsAdgBhAHIAYwBo
AGEAcgBdACgAMgAwACkAIABOAFUATABMACwAWwBQAHIAZQBtAGkAdQBtAEIAaQBsAGwAZQBkAF0A
IABbAGQAZQBjAGkAbQBhAGwAXQAoADEAOAAsACAAMAApACAATgBVAEwATAAsAFsAQwBvAG0AbQBp
AHMAcwBpAG8AbgBCAGkAbABsAGUAZABdACAAIABbAGQAZQBjAGkAbQBhAGwAXQAoADEAOAAsACAA
MAApACAATgBVAEwATAAsAFsAUAByAGUAbQBpAHUAbQBBAG4AbgB1AGEAbABpAHoAZQBkAF0AIABb
AGQAZQBjAGkAbQBhAGwAXQAoADEAOAAsACAAMAApACAATgBVAEwATAAsAFsAQwBvAG0AbQBpAHMA
cwBpAG8AbgBBAG4AbgB1AGEAbABpAHoAZQBkAF0AIABbAGQAZQBjAGkAbQBhAGwAXQAoADEAOAAs
ACAAMAApACAATgBVAEwATAAsAFsAVAB5AHAAZQBDAG8AZABlAF0AIAAgAFsAdgBhAHIAYwBoAGEA
cgBdACgAMQApACAATgBVAEwATAAsAFsAQQBkAGQAcgBlAHMAcwAxAF0AIABbAHYAYQByAGMAaABh
AHIAXQAoADEAMAAwACkAIABOAFUATABMACwACQBbAEEAZABkAHIAZQBzAHMAMgBdACAAWwB2AGEA
cgBjAGgAYQByAF0AKAAxADAAMAApACAATgBVAEwATAAsAFsAUABvAHMAdABhAGwAQwBvAGQAZQBd
ACAAWwB2AGEAcgBjAGgAYQByAF0AKAA1ACkAIABOAFUATABMACwACQBbAFMASQBDAEMAbwBkAGUA
XQAgACAAIABbAGkAbgB0AF0AIABOAFUATABMACwACQBbAEEAYwB0AGkAdgBlAEkAbgBhAGMAdABp
AHYAZQBTAHQAYQB0AHUAcwBdACAAWwB2AGEAcgBjAGgAYQByAF0AKAAxADAAMAApACAATgBVAEwA
TAAAI0EAYwB0AGkAdgBpAHQAaQBlAHMALQBSAGUAcABvAHIAdAABIUEAYwB0AGkAdgBpAHQAaQBl
AHMAUgBlAHAAbwByAHQAACtBAGMAdABpAHYAaQB0AGkAZQBzAFIAZQBwAG8AcgB0AC0AQwBvAHAA
eQABJ1wAQQBjAHQAaQB2AGkAdABpAGUAcwAtAFIAZQBwAG8AcgB0AFwAAYPFWwBJAEQAXQAgAFsA
dgBhAHIAYwBoAGEAcgBdACgANQAwACkAIABOAFUATABMACwAWwBBAGMAYwBvAHUAbgB0AE4AYQBt
AGUAXQAgAFsAdgBhAHIAYwBoAGEAcgBdACgANQAwACkAIABOAFUATABMACwAWwBDAG8AbQBwAGEA
bgB5AFAAbwBsAGkAYwB5AF0AIABbAHYAYQByAGMAaABhAHIAXQAoADUAMAApACAATgBVAEwATAAs
AFsARQBmAGYAZQBjAHQAaQB2AGUARABhAHQAZQBdACAAWwBkAGEAdABlAHQAaQBtAGUAXQAgAE4A
VQBMAEwALABbAEwAbwBvAGsAVQBwAEMAbwBkAGUAXQAgAFsAdgBhAHIAYwBoAGEAcgBdACgAMQAw
ADAAKQAgAE4AVQBMAEwALABbAEkAcwBzAHUAaQBuAGcAQwBvAG0AcABhAG4AeQBDAG8AZABlAF0A
IABbAHYAYQByAGMAaABhAHIAXQAoADIAMAApACAATgBVAEwATAAsAFsAUAByAGUAbQBpAHUAbQBQ
AGEAeQBhAGIAbABlAEMAbwBkAGUAXQAgAFsAdgBhAHIAYwBoAGEAcgBdACgAMgAwACkAIABOAFUA
TABMACwAWwBQAHIAbwBjAGUAZAB1AHIAZQBDAG8AZABlAF0AIABbAHYAYQByAGMAaABhAHIAXQAo
ADUAMAApACAATgBVAEwATAAsAAkAWwBDAG8AbQBtAGkAcwBzAGkAbwBuAEIAaQBsAGwAZQBkAF0A
IABbAGQAZQBjAGkAbQBhAGwAXQAoADEAOAAsACAAMAApACAATgBVAEwATAAsAFsAQwBvAG0AbQBp
AHMAcwBpAG8AbgBBAG4AbgB1AGEAbABpAHoAZQBkAF0AIABbAGQAZQBjAGkAbQBhAGwAXQAoADEA
OAAsACAAMAApACAATgBVAEwATAAsAFsAVAB5AHAAZQBDAG8AZABlAF0AIABbAHYAYQByAGMAaABh
AHIAXQAoADEAKQAgAE4AVQBMAEwALABbAFAAbwBzAHQAYQBsAEMAbwBkAGUAXQAgAFsAdgBhAHIA
YwBoAGEAcgBdACgANQApACAATgBVAEwATAAsAFsAUwBJAEMAQwBvAGQAZQBdACAAWwBpAG4AdABd
ACAATgBVAEwATAAsAFsAQQBjAHQAaQB2AGUASQBuAGEAYwB0AGkAdgBlAFMAdABhAHQAdQBzAF0A
IABbAHYAYQByAGMAaABhAHIAXQAoADEAMAAwACkAIABOAFUATABMAAA1UwBlAHIAdgBlAHIAPQBs
AG8AYwBhAGwAaABvAHMAdAA7AEQAYQB0AGEAYgBhAHMAZQA9AAAzOwBJAG4AdABlAGcAcgBhAHQA
ZQBkACAAUwBlAGMAdQByAGkAdAB5AD0AVAByAHUAZQAAOVMARQBMAEUAQwBUACAAVAB5AHAAZQBO
AGEAbQBlACwAVgBhAGwAdQBlACAARgBSAE8ATQAgAFsAABtFAHgAYwBlAGwARABlAHQAYQBpAGwA
cwBdAAARVAB5AHAAZQBOAGEAbQBlAAAdRQB4AGMAZQBsAFMAaABlAGUAdABOAGEAbQBlAAApQwBv
AGwAdQBtAG4AQgBlAGcAaQBuAGkAbgBnAEwAZQB0AHQAZQByAAAlQwBvAGwAdQBtAG4ARQBuAGQA
aQBuAGcATABlAHQAdABlAHIAACNSAG8AdwBCAGUAZwBpAG4AaQBuAGcATgB1AG0AYgBlAHIAAAtW
AGEAbAB1AGUAAAdZAEUAUwAAXVAAcgBvAHYAaQBkAGUAcgA9AE0AaQBjAHIAbwBzAG8AZgB0AC4A
QQBDAEUALgBPAEwARQBEAEIALgAxADIALgAwADsARABhAHQAYQAgAFMAbwB1AHIAYwBlAD0AAEs7
AEUAeAB0AGUAbgBkAGUAZAAgAFAAcgBvAHAAZQByAHQAaQBlAHMAPQAiAEUAeABjAGUAbAAgADEA
MgAuADAAOwBIAEQAUgA9AAAROwBJAE0ARQBYAD0AMAAiAAAVVABBAEIATABFAF8ATgBBAE0ARQAA
AyQAAAMsAAArcwBlAGwAZQBjAHQAIAB0AG8AcAAgADEAIAAqACAAZgByAG8AbQAgAFsAAAM6AAAD
XQAAbVMARQBMAEUAQwBUACAAQwBvAGwAdQBtAG4ATgBhAG0AZQBUAGEAYgBsAGUALABDAG8AbAB1
AG0AbgBOAGEAbQBlAEUAeABjAGUAbAAsAEQAYQB0AGEAdAB5AHAAZQAgAEYAUgBPAE0AIABbAAAR
TQBhAHAAcABpAG4AZwBdAAAfQwBvAGwAdQBtAG4ATgBhAG0AZQBUAGEAYgBsAGUAAB9DAG8AbAB1
AG0AbgBOAGEAbQBlAEUAeABjAGUAbAAAEUQAYQB0AGEAdAB5AHAAZQAAA1sAAAVdACwAACtdAFsA
dgBhAHIAYwBoAGEAcgBdACgAbQBhAHgAKQAgAE4AdQBsAGwALAAAKV0AWwB2AGEAcgBjAGgAYQBy
AF0AKABtAGEAeAApACAATgB1AGwAbAAAD3MAZQBsAGUAYwB0ACAAAA8gAGYAcgBvAG0AIABbAAAb
SQBOAFMARQBSAFQAIABJAE4AVABPACAAWwAAEykAIABTAEUATABFAEMAVAAgAAAPZABlAGMAaQBt
AGEAbAAAEUMAbwBuAHYAZQByAHQAKAAAJSwAIABDAE8AQQBMAEUAUwBDAEUAKABOAFUATABMAEkA
RgAoAAAjLAAgACcAJwApACwAIABOAFUATABMACkAKQAgAGEAcwAgAAELKQAgAGEAcwAgAAAPIABG
AFIATwBNACAAWwAABV0AIAAAcVMAVABfADIAYwA5ADcANQA1ADMAOQA2AGUANwA2ADQAZABjAGIA
OAAwADgAMABlADIAYgBlADUANwBmAGYANgBmAGEANAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAAABebA1CtXySSbTcDQzDTLmDAAQgAQEIAyAAAQUgAQEREQQgAQEO
BiABARGAjW4HMw4OHRJFCBJFDh0ODg4ODggODg4ODg4SSQ4STRUSUQEOFRJRAQ4VElEBDhUSVQIO
EggSTRJZEl0SYQ4SZRJpEm0IElkODhJJDggSXRJdEmEIEl0ScRwVEXUCDhIIFRF5Ag4SCBUReQIO
EggSXQUgABKAmQUgABKAnQYgARKAoRwDIAAcAyAADgUgAB0SRQYAAw4ODg4GIAEdDh0DBCABAg4F
AAEOHQ4EIAEBHAUAAg4ODgYgAgEOElkEIAASYQQgARwOBQACAg4OAyAAAgQGEYDBCSACEk0RgMEd
HAUgABKAxQQgABJlBiACAQ4SSQYgAQESgM0FIAEIEk0FFRJRAQ4FIAASgNkGIAESgN0IBSABARMA
AyAACAcVElUCDhIIBSABARJZByACARMAEwEFIAETAAgHAAQODg4ODgUgAQgTAAUgABKA5QcgAhKA
6Q4OBSABARJNCiAAFRF1AhMAEwEHFRF1Ag4SCAogABUReQITABMBBxUReQIOEggEIAATAAQgABMB
CAABEoDtEYDxBSAAEoD1ByACAQ4SgPUIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAgYOBAYS
gIUEBhKAiQMGEhQCBggDBhEYBQAAEoCFBQAAEoCJBgABARKAiQQAABIUAwAAAQMoAA4FCAASgIUF
CAASgIkECAASFAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU1RfMmM5NzU1Mzk2ZTc2NGRjYjgwODBlMmJlNTdmZjZmYTQAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAxNgAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADIWwAAAAAAAAAAAADi
WwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1FsAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAA
AAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAGgQAAAAAAAAAAAAA
GgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAAFkGhgA
AAEAAWQaGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkA
bgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAABAFMAdABy
AGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMA
bwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABw
ACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AMgBjADkANwA1ADUA
MwA5ADYAZQA3ADYANABkAGMAYgA4ADAAOAAwAGUAMgBiAGUANQA3AGYAZgA2AGYAYQA0AAAAPgAP
AAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMQA3ADAALgAyADUANgAwADEA
AAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AYwA5AGUAMwAwADYAYQAy
ADcAMABlAGQANAAzAGEANQA4AGYAYwA5ADMAZQAwADMAYwA1ADYAYwA5AGEAMAAyAC4AZABsAGwA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAxADYAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAA
AAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBjADkAZQAz
ADAANgBhADIANwAwAGUAZAA0ADMAYQA1ADgAZgBjADkAMwBlADAAMwBjADUANgBjADkAYQAwADIA
LgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AMgBjADkANwA1
ADUAMwA5ADYAZQA3ADYANABkAGMAYgA4ADAAOAAwAGUAMgBiAGUANQA3AGYAZgA2AGYAYQA0AAAA
QgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADEANwAwAC4AMgA1
ADYAMAAxAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA2ADEANwAwAC4AMgA1ADYAMAAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAAPQ7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Look Container for New Data\Watch for new File"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{323f2d60-c6ad-4724-bb34-7190bfda3c2d}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Watch for new File"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_5ec99eeeb9b048678002111f01b9a03e"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::DropPath,User::FileMask"
              ReadWriteVariables="User::FileName">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d45fe9c092e24e5281d75aa65ed50818")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d45fe9c092e24e5281d75aa65ed50818")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_5ec99eeeb9b048678002111f01b9a03e.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{C01BBDDD-B4F0-414B-8ED4-B904110F4930}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_d45fe9c092e24e5281d75aa65ed50818</RootNamespace><AssemblyName>ST_5ec99eeeb9b048678002111f01b9a03e</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Text.RegularExpressions;
#endregion

namespace ST_d45fe9c092e24e5281d75aa65ed50818
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            int fileCount = 0;
            string[] FilesToProcess;
            while (fileCount == 0)
            {
                try
                {
                    
                    System.Threading.Thread.Sleep(10000);

                    FilesToProcess = System.IO.Directory.GetFiles(Dts.Variables["DropPath"].Value.ToString(), "*-Report-*-*-*.xlsx");
                    fileCount = FilesToProcess.Length;
                    foreach (string dataFile in FilesToProcess)
                    {

                        // Here we call Regex.Match.
                        Match match = Regex.Match(Path.GetFileName(dataFile), @"(.*)-Report-(.*)-(.*)-\d{8}(.*)\.xlsx$", RegexOptions.IgnoreCase);

                        // Here we check the Match instance.
                        if (match.Success)
                        {
                            // Store the file name for use later in the package.
                            Dts.Variables["FileName"].Value = Path.GetFileName(dataFile);

                        }
                    }
                    
                }
                catch (Exception ex)
                {
                    throw ex;
                }
            }

            // TODO: Add your code here
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_d45fe9c092e24e5281d75aa65ed50818</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_d45fe9c092e24e5281d75aa65ed50818</msb:DisplayName>
		<msb:ProjectId>{F357408B-2AFE-4872-B698-21E156E8A1BF}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_5ec99eeeb9b048678002111f01b9a03e.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d45fe9c092e24e5281d75aa65ed50818.Properties.Settings.get_Default():ST_d45fe9c092e24e5281d75aa65ed50818.Properties.Sett" +
    "ings")]

namespace ST_d45fe9c092e24e5281d75aa65ed50818.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d45fe9c092e24e5281d75aa65ed50818.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d45fe9c092e24e5281d75aa65ed50818.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d45fe9c092e24e5281d75aa65ed50818.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d45fe9c092e24e5281d75aa65ed50818.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d45fe9c092e24e5281d75aa65ed50818.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_5ec99eeeb9b048678002111f01b9a03e.dll">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
LgBTACgBLgBbAEUBQwBjAI4ASQBzAPYAYQB7AI4AYwBrAI4AGwADAAEABAADAAAAkgS/AAAAKQHE
AAAA7QXJAAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAADhiPbwAAAAAAAG8AAAAEAAAA
AAAAAAAAAAB3AF8AAAAAAAsAAAAAAAAAAAAAAIAAbAMAAAAABAAAAAAAAAAAAAAAdwANBAAAAAAL
AAAAAAAAAAAAAACAADgAAAAAAAAAAAABAAAA8wQAAAUAAgAAAABTVF9kNDVmZTljMDkyZTI0ZTUy
ODFkNzVhYTY1ZWQ1MDgxOAA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5N
YW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAVGhyZWFkAFNUXzVlYzk5ZWVlYjliMDQ4Njc4MDAy
MTExZjAxYjlhMDNlAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBHZXRGaWxlTmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50
aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNl
ckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJn
ZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBB
c3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Nj
cmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3Rl
bS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNYXRjaABQYXRo
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5U
YXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABT
VF81ZWM5OWVlZWI5YjA0ODY3ODAwMjExMWYwMWI5YTAzZS5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVu
dW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xv
YmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUluZm8AU2xlZXAA
R3JvdXAAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNz
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9kNDVm
ZTljMDkyZTI0ZTUyODFkNzVhYTY1ZWQ1MDgxOC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMARGVidWdnaW5nTW9kZXMAU1RfZDQ1ZmU5YzA5MmUyNGU1MjgxZDc1YWE2NWVkNTA4MTguUHJv
cGVydGllcwBnZXRfVmFyaWFibGVzAEdldEZpbGVzAFNldHRpbmdzAFN5c3RlbS5UZXh0LlJlZ3Vs
YXJFeHByZXNzaW9ucwBSZWdleE9wdGlvbnMAZ2V0X1N1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1
bHRzAE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABSZWdleABnZXRfQXNzZW1ibHkA
RGlyZWN0b3J5AAAAAAARRAByAG8AcABQAGEAdABoAAAnKgAtAFIAZQBwAG8AcgB0AC0AKgAtACoA
LQAqAC4AeABsAHMAeAABTSgALgAqACkALQBSAGUAcABvAHIAdAAtACgALgAqACkALQAoAC4AKgAp
AC0AXABkAHsAOAB9ACgALgAqACkAXAAuAHgAbABzAHgAJAABEUYAaQBsAGUATgBhAG0AZQAAcVMA
VABfAGQANAA1AGYAZQA5AGMAMAA5ADIAZQAyADQAZQA1ADIAOAAxAGQANwA1AGEAYQA2ADUAZQBk
ADUAMAA4ADEAOAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAA
wGvFj1SIhU2XFjU0WMwCHwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERVQcHBAgdDggOBAABAQgE
IAASaQQgABJtBSABEnEcAyAAHAMgAA4GAAIdDg4OBAABDg4KAAMSgIEODhGAhQMgAAIEIAEBHAgA
ARKAjRGAkQUgABKAlQcgAgEOEoCVCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEk0DBhJR
AwYSEAIGCAMGERQEAAASTQQAABJRBQABARJRBAAAEhADAAABBAgAEk0ECAASUQQIABIQCAEACAAA
AAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9kNDVmZTlj
MDkyZTI0ZTUyODFkNzVhYTY1ZWQ1MDgxOAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE2AABH
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5O
RVQgRnJhbWV3b3JrIDQAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3Vy
Y2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVi
bGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNv
dXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAApC8AAAAAAAAAAAAAvi8AAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAALAvAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8l
ACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCPbw4YAAABAI9vDhg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGQANAA1AGYAZQA5AGMAMAA5ADIAZQAyADQAZQA1ADIAOAAxAGQANwA1AGEAYQA2
ADUAZQBkADUAMAA4ADEAOAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA2ADEANQA4AC4AMgA4ADUANQA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADUAZQBjADkAOQBlAGUAZQBiADkAYgAwADQAOAA2ADcAOAAwADAAMgAxADEAMQBmADAA
MQBiADkAYQAwADMAZQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANQBlAGMAOQA5AGUAZQBlAGIAOQBiADAANAA4ADYANwA4ADAAMAAyADEA
MQAxAGYAMAAxAGIAOQBhADAAMwBlAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGQANAA1AGYAZQA5AGMAMAA5ADIAZQAyADQAZQA1ADIAOAAxAGQANwA1AGEA
YQA2ADUAZQBkADUAMAA4ADEAOAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgAxADUAOAAuADIAOAA1ADUAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAxADUAOAAuADIAOAA1ADUAOQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADQPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Look Container for New Data.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{2B29CFD8-2BF8-4884-9DC4-F7FC7063B123}"
          DTS:From="Package\Look Container for New Data\Move Data File To Processing Directory"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Look Container for New Data\Script Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Look Container for New Data.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{ab1c7e58-0b76-47e5-8339-16422a40ef95}"
          DTS:From="Package\Look Container for New Data\Watch for new File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Look Container for New Data\Move Data File To Processing Directory" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Look Container for New Data.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{CDB99CDE-E843-4BA4-895C-243C5E726A46}"
          DTS:From="Package\Look Container for New Data\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Look Container for New Data\Create Archive file directory" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Look Container for New Data.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{0E549AF5-05F4-4FD6-80F6-E8556E7202F4}"
          DTS:From="Package\Look Container for New Data\Create Archive file directory"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Look Container for New Data\Move Processed File To Archive Directory" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="158,42"
          Id="Package\Look Container for New Data\Create Archive file directory"
          TopLeft="224,322" />
        <NodeLayout
          Size="263,42"
          Id="Package\Look Container for New Data\Move Data File To Processing Directory"
          TopLeft="165,117" />
        <NodeLayout
          Size="273,42"
          Id="Package\Look Container for New Data\Move Processed File To Archive Directory"
          TopLeft="170,429" />
        <NodeLayout
          Size="131,42"
          Id="Package\Look Container for New Data\Script Task"
          TopLeft="234,219" />
        <NodeLayout
          Size="167,42"
          Id="Package\Look Container for New Data\Watch for new File"
          TopLeft="209,29" />
        <EdgeLayout
          Id="Package\Look Container for New Data.PrecedenceConstraints[Constraint]"
          TopLeft="298,159">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Look Container for New Data.PrecedenceConstraints[Constraint 1]"
          TopLeft="294.5,71">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Look Container for New Data.PrecedenceConstraints[Constraint 2]"
          TopLeft="301.25,261">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61"
              Start="0,0"
              End="0,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Look Container for New Data.PrecedenceConstraints[Constraint 3]"
          TopLeft="304.75,364">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65"
              Start="0,0"
              End="0,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="730,524"
          Size="730,567"
          Id="Package\Look Container for New Data"
          TopLeft="451,109" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>